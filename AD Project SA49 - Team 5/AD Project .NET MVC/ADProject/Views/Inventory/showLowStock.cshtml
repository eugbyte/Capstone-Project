@using ADProject.ViewModels
@using PagedList.Mvc
@model PagedList.IPagedList<ViewInventory>

@{
    ViewBag.Title = "showLowStock";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script language='javascript' type='text/javascript'>

     function show_hide(status, id,supplierRank) {
         if (status == "Ordered" || status == "Sufficient" )
         {
             document.getElementById(id).style.opacity = 0.6;
             document.getElementById(id).style.cursor = "not-allowed";
             document.getElementById(id).disabled = "true";
         }
         if ((status == "Enquiring" || status == "Drafted") && (supplierRank == 1) )
         {
             document.getElementById(id).style.opacity = 0.6;
             document.getElementById(id).style.cursor = "not-allowed";
             document.getElementById(id).disabled = "true";
         }
    }


    function SendForm(supplierName,itemId,reOrderQty) {
        var data = { supplierName: supplierName };
        window.item = itemId;
        window.supplier = supplierName;
        window.reorderqty = reOrderQty;
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var response = JSON.parse(xhttp.response)
                if (response.reply == "No") {
                    modal.style.display = "block";
                } else if (response.reply == "Yes") {
                    var url = "@Url.Action("CreateOrderFromStockList", "Order")";
                 //   url = url.replace(1, window.item); //replace 1 with item
                 //   url = url.replace(2, window.supplier); //replace 2 with supplier
                    //   url = url.replace(3, window.reorderqty); //replace 3 with reorderqty
                    $.post(url, { itemId: window.item, supplierName: window.supplier, reOrderQty: window.reorderqty }, function (Html) {
                        document.open();
                        document.write(Html);
                        document.close();
        });
                }
            }
        };
        xhttp.open("POST", "/Order/CheckForExistingOrder", true);
        xhttp.setRequestHeader("Content-type", "application/json;charset=UTF-8");
        // xhttp.responseType = 'json';
        xhttp.send(JSON.stringify(data));
    }
</script>

<style>

    button {
        height: 40px;
        width: 200px;
    }
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
</style>


<h2>Inventory List</h2>

@using (Html.BeginForm("showLowStock", "Inventory", FormMethod.Post, new { @class = "navbar-form navbar-left" }))
{
    <div class="form-group">
        @Html.Label("Search products") <span>&nbsp;</span>
        @Html.TextBox("search", null, new { @class = "form-control", @placeholder = "Search Products", style = "margin-right: 10px" })
    </div>
    <div class="form-group">
        @Html.Label("Select Stock Status") <span>&nbsp;</span>
        @Html.DropDownList("StockStatus", new List<SelectListItem> {
            new SelectListItem { Text = "Select stock level", Value = "", Selected = true },
            new SelectListItem { Text = "show all levels", Value = "" },
            new SelectListItem { Text = "show insufficient stock", Value = "Insufficient"},
            new SelectListItem { Text = "show stock in an order", Value = "Ordered" },
            new SelectListItem { Text = "show stock in an enquiry", Value = "Enquiring" },
            new SelectListItem { Text = "show stock in a draft", Value = "Drafted" } },
            new { onchange = "this.form.submit()", @class = "form-control" })
    </div>
}


<!-- The Modal -->
<div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <span class="close">&times;</span>
        <p>There isn't an existing order with this supplier. Would you like to create a new order?</p>
        <button id="CreateNewOrder">Create New Order</button>
        <button id="Cancel">Cancel</button>
    </div>


</div>

<table class="table">
    <tr>
        <th>Item No</th>
        <th>Description</th>
        <th>Location</th>
        <th>Quantity</th>
        <th>Restock Level</th>
        <th>Restock Quantity</th>
        <th>Unit of Measure</th>
        <th>Status</th>
        <th>Supplier 1</th>
        <th>Supplier 2</th>
        <th>Supplier 3</th>
        <th>Adjustment</th>
    </tr>

    @foreach (var inventory in Model)
    {
        <tr>
            <td>@inventory.itemId</td>
            <td>@inventory.description</td>
            <td>@inventory.location</td>
            <td>@inventory.quantity</td>
            <td>@inventory.rOLevel</td>
            <td>@inventory.rOQty</td>
            <td>@inventory.unit</td>
            <td>@inventory.status</td>
            <!-- For Supplier 1 Button-->
            <td>
                <button id="@inventory.itemId@inventory.supplier1" type="button" onclick="SendForm('@inventory.supplier1',@inventory.itemId,@inventory.rOQty)" class="btn btn-primary">@inventory.supplier1</button>
                <script>
                   show_hide("@inventory.status","@inventory.itemId@inventory.supplier1",1);
                </script>
            </td>
            <!-- For Supplier 2 Button-->
            <td>
                <button id="@inventory.itemId@inventory.supplier2" type="button" onclick="SendForm('@inventory.supplier2',@inventory.itemId,@inventory.rOQty)" class="btn btn-success">@inventory.supplier2</button>
                <script>
                   show_hide("@inventory.status","@inventory.itemId@inventory.supplier2",2);
                </script>
            </td>
            <!-- For Spplier 3 Button-->
            <td>
                <button id="@inventory.itemId@inventory.supplier3" type="button" onclick="SendForm('@inventory.supplier3',@inventory.itemId,@inventory.rOQty)" class="btn btn-info">@inventory.supplier3</button>
                <script>
                   show_hide("@inventory.status","@inventory.itemId@inventory.supplier3",3);
                </script>
            </td>
            <!-- For Adjustment Button-->
            <td>
                @using (Html.BeginForm("ShowAdjustmentEntry", "Inventory", FormMethod.Post))
                {
                    <input type="hidden" name="itemId" value="@inventory.itemId" />
                    <input class="btn btn-primary" id=@inventory.itemId align="bottom" type="submit" value="Adjust">
                }
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("showLowStock", new { page }))

<script language='javascript' type='text/javascript'>

    var item = 1;
    var supplier = "";
    var reorderqty = 0;

    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that close the modal
    var cancelbtn = document.getElementById("Cancel");

    var createbtn = document.getElementById("CreateNewOrder");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];



    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks on cancel, close the modal
    cancelbtn.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks on create
    createbtn.onclick = function () {
        modal.style.display = "none";
        var url = "@Url.Action("CreatePOWithFirstSupplier", "Order")";
     //   url = url.replace(1, window.supplier); //replace 1 with supplier
        //   url = url.replace(2, window.item); //replace 2 with item
        $.post(url, { supplier: window.supplier, itemId: window.item }, function (Html) {
                        document.open();
                        document.write(Html);
                        document.close();
        });
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>










